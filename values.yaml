# Default values for audiobookshelf.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

persistence:
  config:
    enabled: true
    size: 1Gi
    storageClass: ""
    annotations: {}
    accessMode: ReadWriteOnce
    existingClaim: ""
  metadata:
    enabled: true
    size: 10Gi
    storageClass: ""
    annotations: {}
    accessMode: ReadWriteOnce
    existingClaim: ""

timezone: "Europe/Berlin"

# Define existing persistent volume claims that contain the audiobooks, ebooks and podcasts
persistentVolumeClaims: []
  #   # The name of the persistent volume claim
  # - name: audiobooks
  #   # The mount path of the persistent volume claim in the audiobookshelf container.
  #   mountPath: /audiobooks
  #   # true - the persistent volume claim is read-only
  #   readOnly: true

# Define nfs shares that contain the audiobooks, ebooks and podcasts
nfs: []
  # # The domain or IP address of the NFS server
  # - server: 192.168.6.50
  #   # The storage size of the NFS share
  #   storage: 1Ti
  #   # The name of the NFS share server
  #   name: nfs
  #   # The list of NFS shares
  #   share:
  #     # The name of the NFS share
  #     - name: audiobooks
  #       # The path of the NFS share
  #       path: /mnt/audiobooks
  #       # The mount path of the NFS share in the audiobookshelf container.
  #       mountPath: /audiobooks

image:
  repository: ghcr.io/advplyr/audiobookshelf
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: audiobooks.my-domain.com
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
#  - name: audiobooks
#    persistentVolumeClaim:
#      claimName: audiobooks-pvc
#  - name: podcasts
#    persistentVolumeClaim:
#      claimName: podcasts-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
#  - name: audiobooks
#    mountPath: "/audiobooks"
#    readOnly: true
#  - name: podcasts
#    mountPath: "/podcasts"
#    readOnly: true
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
